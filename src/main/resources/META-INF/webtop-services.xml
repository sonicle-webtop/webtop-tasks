<?xml version="1.0" encoding="UTF-8"?>
<services>
	<!--
		<package> -> Java package name. REQUIRED
			Also used as service identifier/name (ID).
			
		<jsPackage> -> Javascript package name. REQUIRED
			This package will be used to determine classes files path.
			
		<shortName> -> Short service name. REQUIRED
			Value must be unique in webtop platform. This name is used as 
			short service idenfitier (XID) and as prefix for css classes.
			
		<version> -> Service version. REQUIRED
		<buildDate> -> This package build date.
		<company> -> Service's company name.
		<companyEmail> -> Service's company email.
		<companyWebSite> -> Service's company website.
		<supportEmail> -> Service's company support email for feedbacks.
			
		<controllerClassName> -> Controller class name (do not specify base package name).
			If empty, default "Controller" value will be used.
			
		<serviceClassName> -> Service private class name (do not specify base package name).
			If empty, default "Service" value will be used.
			
		<serviceJsClassName> -> Service client class name (do not specify base package name).
			If empty, above serviceClassName value will be used.
		
		<serviceVarsModelJsClassName> Variables model class name transfered during startup.
			Defaults to "model.ServiceVars"
			
		<publicServiceClassName> -> Public service class name (do not specify base package name).
			If empty, default "PublicService" value will be used.
		
		<publicServiceVarsModelJsClassName> Variables model class name transfered during startup.
			Defaults to "model.PublicServiceVars"
			
		<jobServiceClassName> -> Job service class name (do not specify base package name).
			If empty, default "JobService" value will be used.
			
		<userOptions> -> User options section.
			If empty, default keys values will be used. See below!
			
			Allowed keys:
			<serviceClassName> -> User options service class name (do not specify base package name).
				If empty, default "UserOptionsService" value will be used.
			<viewJsClassName> -> Client view class name.
				If empty, default "view.UserOptions" value will be used.
			<modelJsClassName> -> Client model class name.
				If empty, default "model.UserOptions" value will be used.
		
		
		
		<resources> -> Resources section.
			It must contain zero or more <resource> elements that define following attributes:
			- name
				The resource name.
			- [type]
				Specifies the resource type: "default" or "share". Default to "default".
			- actions
				Specifies permission action on the recource: like READ, WRITE, ACCESS, MANAGE, etc...
				Can be avoided in case of "share" type, this kind of type has a predefined action set.
	-->
	<service>
		<package>com.sonicle.webtop.tasks</package>
		<jsPackage>Sonicle.webtop.tasks</jsPackage>
		<shortName>wttasks</shortName>
		<version>@@webtop.service.version@@</version>
		<buildDate>@@webtop.service.buildDate@@</buildDate>
		<buildType>@@webtop.service.buildType@@</buildType>
		
		<controller className=".TasksController" />
		<manager className=".TasksManager" />
		<serviceClassName>Service</serviceClassName>
		<company>Sonicle S.r.l.</company>
		<companyEmail>sonicle@sonicle.com</companyEmail>
		<companyWebSite>http://www.sonicle.com</companyWebSite>
		<supportEmail>sonicle@sonicle.com</supportEmail>
		<userOptions>
			<serviceClassName>UserOptionsService</serviceClassName>
			<viewJsClassName>view.UserOptions</viewJsClassName>
			<modelJsClassName>model.UserOptions</modelJsClassName>
		</userOptions>
		
		<restApis>
			<restApi oasFile="openapi-v1.json" />
		</restApis>
		
		<permissions>
			<sharePermission group="CATEGORY" />
		</permissions>
		
		<portlets>
			<portlet jsClassName="portlet.Tasks" />
		</portlets>
	</service>
</services>
